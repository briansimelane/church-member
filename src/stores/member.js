import { defineStore } from 'pinia'
import { colRef} from '../firebase/config'
import { doc, addDoc } from 'firebase/firestore'

export const useMemberStore = defineStore({
  id: 'member',
  state: () => ({
    member: {
      circuit: '',
      society: '',
      classNumber: '',
      title: '',
      firstName: '',
      middleName: '',
      surname: '',
      knownAs: '',
      birthDate: '',
      gender: '',
      cellNumber: '',
      otherNumber: '',
      email: '',
      homeAddress: '',
      communicationMethod: {
        cellphone: false,
        announcements: false,
        email: false,
        facebook: false,
        whatsapp: false
      },
      organisations: {
        childrensMinistry: false,
        wesleyGuild: false,
        forum: false,
        womensManyano: false,
        womensFellowship: false,
        preachers: false,
        yam: false,
        methsoc: false,
        ymg: false,
        music: false,
        ywm: false,
        evangelism: false,
        notAmember: false,
        other: ''
      },
      employmentStatus: {
        ftEmployed: false,
        ptEmployed: false,
        pensioner: false,
        unemployed: false,
        businessOwner: false,
        scholar: false,
        ftStudent: false,
        ptStudent: false,
        other: ''
      },
      formalEducation: {
        highestLevel: '',
        other: ''
      },
      fieldOfStudy: {
        agriculture: false,
        architecture: false,
        arts: false,
        business: false,
        civil: false,
        education: false,
        electrical: false,
        engineering: false,
        finance: false,
        healthcare: false,
        hospitality: false,
        humanResources: false,
        informationTechnology: false,
        law: false,
        linguistics: false,
        lifeSciences: false,
        marketing: false,
        mathematics: false,
        military: false,
        officeAdmin: false,
        philosophy: false,
        physicalEd: false,
        psychology: false,
        publicAdmin: false,
        safety: false,
        tourism: false,
        otherField: '',
        otherSkill: ''
      },
      plannedGiving: {
        tithe: false,
        titheFrequency: '',
        titheAmountRange: '',
        pledge: false,
        pledgeFrequency: '',
        pledgeAmountRange: '',
        donation: false,
        donationFrequency: '',
        donationAmountRange: ''
      },
      nextOfKin: {
        name: '',
        surname: '',
        number: ''
      }
    },
    navigationLog: 0,
    loading: false,
    navigationUser: 0,
    user: false
  }),
  getters: {
    
  },
  actions: {
    setNavigationLog(num) {
      this.navigationLog = num
    },
    async addMemberToDatabase() {
      this.loading = true
      addDoc(colRef, {
        //memberData: this.member,
      circuit: this.member.circuit,
      society: this.member.society,
      classNumber: this.member.classNumber,
      title: this.member.title,
      firstName: this.member.firstName,
      middleName: this.member.middleName,
      surname: this.member.surname,
      knownAs: this.member.knownAs,
      birthDate: this.member.birthDate,
      gender: this.member.gender,
      cellNumber: this.member.cellNumber,
      otherNumber: this.member.otherNumber,
      email: this.member.email,
      homeAddress: this.member.homeAddress,
      communicationMethod_cellphone: this.member.communicationMethod.cellphone,
      communicationMethod_announcements: this.member.communicationMethod.announcements,
      communicationMethod_email: this.member.communicationMethod.email,
      communicationMethod_facebook: this.member.communicationMethod.facebook,
      communicationMethod_whatsapp: this.member.communicationMethod.whatsapp,
      organisations_childrensMinistry: this.member.organisations.childrensMinistry,
      organisations_wesleyGuild: this.member.organisations.wesleyGuild,
      organisations_forum: this.member.organisations.forum,
      organisations_womensManyano: this.member.organisations.womensManyano,
      organisations_womensFellowship: this.member.organisations.womensFellowship,
      organisations_preachers: this.member.organisations.preachers,
      organisations_yam: this.member.organisations.yam,
      organisations_methsoc: this.member.organisations.methsoc,
      organisations_ymg: this.member.organisations.ymg,
      organisations_music: this.member.organisations.music,
      organisations_ywm: this.member.organisations.ywm,
      organisations_evangelism: this.member.organisations.evangelism,
      organisations_notAmember: this.member.organisations.notAmember,
      organisations_other: this.member.organisations.other,
      employmentStatus_ftEmployed: this.member.employmentStatus.ftEmployed,
      employmentStatus_ptEmployed: this.member.employmentStatus.ptEmployed,
      employmentStatus_pensioner: this.member.employmentStatus.pensioner,
      employmentStatus_unemployed: this.member.employmentStatus.unemployed,
      employmentStatus_businessOwner: this.member.employmentStatus.businessOwner,
      employmentStatus_scholar: this.member.employmentStatus.scholar,
      employmentStatus_ftStudent: this.member.employmentStatus.ftStudent,
      employmentStatus_ptStudent: this.member.employmentStatus.ptStudent,
      employmentStatus_other: this.member.employmentStatus.other,
      formalEducation_highestLevel: this.member.formalEducation.highestLevel,
      formalEducation_other: this.member.formalEducation.other,
      fieldOfStudy_agriculture: this.member.fieldOfStudy.agriculture,
      fieldOfStudy_architecture: this.member.fieldOfStudy.architecture,
      fieldOfStudy_arts: this.member.fieldOfStudy.arts,
      fieldOfStudy_business: this.member.fieldOfStudy.business,
      fieldOfStudy_civil: this.member.fieldOfStudy.civil,
      fieldOfStudy_education: this.member.fieldOfStudy.education,
      fieldOfStudy_electrical: this.member.fieldOfStudy.electrical,
      fieldOfStudy_engineering: this.member.fieldOfStudy.engineering,
      fieldOfStudy_finance: this.member.fieldOfStudy.finance,
      fieldOfStudy_healthcare: this.member.fieldOfStudy.healthcare,
      fieldOfStudy_hospitality: this.member.fieldOfStudy.hospitality,
      fieldOfStudy_humanResources: this.member.fieldOfStudy.humanResources,
      fieldOfStudy_informationTechnology: this.member.fieldOfStudy.informationTechnology,
      fieldOfStudy_law: this.member.fieldOfStudy.law,
      fieldOfStudy_linguistics: this.member.fieldOfStudy.linguistics,
      fieldOfStudy_lifeSciences: this.member.fieldOfStudy.lifeSciences,
      fieldOfStudy_marketing: this.member.fieldOfStudy.marketing,
      fieldOfStudy_mathematics: this.member.fieldOfStudy.mathematics,
      fieldOfStudy_military: this.member.fieldOfStudy.military,
      fieldOfStudy_officeAdmin: this.member.fieldOfStudy.officeAdmin,
      fieldOfStudy_philosophy: this.member.fieldOfStudy.philosophy,
      fieldOfStudy_physicalEd: this.member.fieldOfStudy.physicalEd,
      fieldOfStudy_psychology: this.member.fieldOfStudy.psychology,
      fieldOfStudy_publicAdmin: this.member.fieldOfStudy.publicAdmin,
      fieldOfStudy_safety: this.member.fieldOfStudy.safety,
      fieldOfStudy_tourism: this.member.fieldOfStudy.tourism,
      fieldOfStudy_otherField: this.member.fieldOfStudy.otherField,
      fieldOfStudy_otherSkill: this.member.fieldOfStudy.otherSkill,
      plannedGiving_tithe: this.member.plannedGiving.tithe,
      plannedGiving_titheFrequency: this.member.plannedGiving.titheFrequency,
      plannedGiving_titheAmountRange: this.member.plannedGiving.titheAmountRange,
      plannedGiving_pledge: this.member.plannedGiving.pledge,
      plannedGiving_pledgeFrequency: this.member.plannedGiving.pledgeFrequency,
      plannedGiving_pledgeAmountRange: this.member.plannedGiving.pledgeAmountRange,
      plannedGiving_donation: this.member.plannedGiving.donation,
      plannedGiving_donationFrequency: this.member.plannedGiving.donationFrequency,
      plannedGiving_donationAmountRange: this.member.plannedGiving.donationFrequency,
      nextOfKin_name: this.member.nextOfKin.name,
      nextOfKin_surname: this.member.nextOfKin.surname,
      nextOfKin_number: this.member.nextOfKin.number

      }).then(() => {
        this.loading = false
      })
    }
  }
})
